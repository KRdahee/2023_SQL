[논리연산자를 활용하여 조건 만들기 - AND, OR, NOT]

employees 테이블에서 복잡한 조건을 만족하는 직원을 검색해 봅시다.

1. first_name이 'Chirstian' 또는 'Georgi' 이다.
2. gender가 남자이다.
3. hire_date가 '1986-06-26' 이 아니다.

지시사항

논리연산자를 이용해 문제에 제시된 복잡한 조건을 만족하는 쿼리를 작성하세요.
조회할 때는 모든 컬럼을 검색하도록 합니다.

Tips
연산자의 우선순위에 주의해야 합니다. ()를 활용해보세요.

-- 문제의 조건에 맞는 직원을을 출력합니다.
-- 문제의 조건에 맞는 직원을을 출력합니다.
select *
from 
employees
where 
(first_name = 'Chirstian' 
or 
first_name = 'Georgi')
and 
gender = 'M'
and not
(hire_date = '1986-06-26');

다시 읽어보기

먼저, “Chirstian”이 아닌 “Christian”으로 철자가 올바르게 수정되어야 합니다. 
또한, “hire_data” 대신 “hire_date”를 사용해야 합니다. 
마지막으로, “not” 연산자를 사용하는 방법에서 오류가 있습니다. 
“not” 연산자를 사용할 때는 조건을 괄호로 묶어야 합니다.

[범위를 지정하여 검색하기 - BETWEEN 1]

엘리스네 반 선생님은 중간고사의 성적에 따라서 선물을 주겠다고 약속했습니다.
국어, 영어, 수학 점수 중 하나라도 100점인 학생에게는 짜장면을 사주시기로 약속했고
3과목 모두 70~95점 사이인 학생에게는 과자를 사주신다고 했습니다.
여러분은 학생들의 성적이 담겨있는 score테이블에서 짜장면을 받을 학생과 과자를 받을 학생을 차례대로 조회해 봅시다.

지시사항
국어, 영어, 수학 점수 중 하나라도 100점인 학생을 검색해보세요.
3과목 모두 70~95점 사이인 학생을 검색해보세요.
조회할 때는 모든 컬럼을 조회하도록 합니다.

Tips
and와 or은 3개 이상에서도 사용이 가능합니다. 예를 들어 A and B and C라고 작성한다면 A, B, C모두를 만족해야 합니다.

DESC score;

-- 짜장면을 받을 수 있는 학생을 조회하는 쿼리를 작성해주세요.

select *
from score
where korean = 100
or english = 100
or math = 100;
-- 과자를 받을 수 있는 학생을 조회하는 쿼리를 작성해주세요.
select *
from score
where korean between 70 and 95 
and english between 70 and 95
and math between 70 and 95

[범위를 지정하여 검색하기 - BETWEEN 2]

입사 연도에 따라 직원들에게 추가 보너스를 주 려고 합니다.
1980년에서 1989년 사이에 입사한 직원과 1990년에서 1999년 사이에 입사한 직원을 각각 검색해봅시다.
BETWEEN을 이용해서 해결해보세요.

지시사항
employees 테이블에서:
1. SELECT문을 이용해서 1980년에서 1989년 사이에 입사한 직원의 모든 컬럼을 검색해보세요.
2. SELECT문을 이용해서 1990년에서 1999년 사이에 입사한 직원의 모든 컬럼을 검색해보세요.

Tip!
1980-01-01, 1989-12-31 으로 일자까지 작성해주세요.

-- 1980~1989년도에 입사한 직원을 검색하세요.
select *
from employees
where hire_date between '1980-01-01'and '1989-12-31';

-- 1990~1999년도에 입사한 직원을 검색하세요.

select *
from employees
where hire_date between '1990-01-01'and '1999-12-31';

[여러 개의 OR를 간결하게 사용하기 - IN 1]
엘리스는 자기가 좋아하는 작가들이 작성한 책만 골라내려고 합니다.
A IN B 는 B의 값 중에 A가 포함된 값을 찾아줍니다.
아래의 문제를 IN문을 사용해서 풀어봅시다.

지시사항

1. 다음 작가가 쓴 책들만 골라서 출력해 봅시다.
  William Shakespeare
  John Ronald Reuel Tolkien
  Joanne Kathleen Rowling
2. 출력할 때는 *을 이용해 모든 컬럼을 출력하도록 합니다.
  book테이블의 각 컬럼은 다음과 같습니다.

-- 책들의 정보가 담긴 테이블의 구조를 출력합니다. 수정하실 필요는 없습니다.
DESC book;

-- 해당하는 작가가 쓴 책만 골라서 출력합니다.
select *
from book 
where author in ('Joanne Kathleen Rowling', 'William Shakespeare', 'John Ronald Reuel Tolkien');



[여러 개의 OR를 간결하게 사용하기 - IN 2]

회사 이벤트 상품을 지급하기 위해서 직원 중 사람을 찾으려는데 이름만 알고 있습니다.
해당 이름을 가진 사람들을 보고 누가 당첨자인지 확인하려고 합니다.
employees 테이블을 사용하여 확인해봅시다.

지시사항

1.IN을 이용해서 다음의 이름(last_name)을 가진 사람들만 골라서 검색해봅시다.
  Michaels
  Genin
  Peha

검색할 때는 *을 이용해 모든 컬럼을 검색하도록 합니다.

-- 해당하는 이름을 가진 사람들만 골라서 출력합니다.
select *
from employees
where last_name in ('Michaels','Genin','Peha')

ex) 신체 검사표
    학생들의 이름과 키, 몸무게, 성별이 저장되어있는 데이터베이스 student가 있습니다.
    
    name : 학생의 이름
    height : 키
    weight : 몸무게
    gender : 성별, M은 남성, F는 여성을 나타냄
    다양한 학생들의 정보를 보고, 아래의 지시사항에 맞추어 정보를 조회해보세요.
    
    
    지시사항
    아래의 내용을 차례대로 조회한 뒤 제출해보세요.
    
    모든 학생의 이름을 조회해보세요.
    성별이 남자인 학생들의 모든 정보를 조회해보세요.
    키가 170 이하인 학생들의 키만 따로 조회해보세요.
    몸무게가 50 이상인 학생들의 몸무게만 따로 조회해보세요.
    student테이블의 내용은 다음과 같습니다.

-- 아래에 미션을 수행하는 코드를 작성해 봅시다.
SELECT name FROM student;
SELECT * FROM student WHERE gender = 'M';
SELECT height FROM student WHERE height <= 170;
SELECT weight FROM student WHERE weight >= 50;



[체지방율 검사]

학생들이 그토록 두려워하는 신체검사 날이 지나갔습니다.
신체검사 데이터를 바탕으로 보건 선생님이 과체중이거나 저체중인 학생들을 따로 부르고 싶어 합니다.
측정된 몸무게와 신장으로 학생들의 체질량을 검사해 과체중이거나, 저체중인 학생을 골라내주세요.

  name : 학생의 이름
  height : 키
  weight : 몸무게
  gender : 성별, M은 남성, F는 여성을 나타냄
  아래의 지시사항에 맞추어 정보를 조회해보세요.

지시사항

아래의 내용을 차례대로 조회한 뒤 제출해보세요.
1. 모든 학생들의 모든 정보와 bmi 지수를 조회해주세요.
2. bmi 지수가 18.5보다 낮거나 같고(저체중) 25.0보다 크거나 같은(과체중) 학생들의 모든 정보와 bmi 지수를 한 개의 select문 안에서 조회해주세요.
3. bmi 지수 공식은 다음과 같습니다.
4. 몸무게 / (신장(m) * 신장(m))
5. cm단위와 m단위는 다음과 같은 관계를 가집니다.
  173cm == 1.73m
6. student 테이블의 내용은 다음과 같습니다.

Tips

두 개 이상의 컬럼 혹은 수식을 조회하는 법
*은 해당 테이블의 모든 컬럼의 약자입니다.
*은 student테이블에서의 name, height, weight, gender와 완전히 일치합니다.
*과 함께 다른 컬럼도 조회하고 싶다면
select *, 컬럼으로 가능하겠죠?
혹은 bmi 수식을 적용하고 싶다면
select *, 수식으로 가능합니다.

-- 아래에 미션을 수행하는 코드를 작성해 봅시다.
SELECT *, weight / (height / 100 * height / 100) AS bmi
FROM student;
-- 모든 학생들의 모든 정보와 BMI 지수를 조회합니다
SELECT *, weight / (height / 100 * height / 100) AS bmi
FROM student
WHERE (weight / (height / 100 * height / 100)) <= 18.5
OR (weight / (height / 100 * height / 100)) >= 25.0;
-- BMI 지수가 18.5보다 낮거나 같고 25.0보다 크거나 같은 학생들의 모든 정보와 BMI 지수를 조회합니다.



[주주총회]

주주총회란, 주식회사에서 회사의 주식을 가지고 있는 주주들이 모여 회사의 중요한 일을 결정하는 의결기관입니다.
보통의 선거에서는 1인당 1표의 의결권을 갖지만, 주주총회에서는 가지고 있는 주식 수만큼의 의결권을 가질 수 있기 때문에 몇 개의 주식을 가졌는지는 매우 중요합니다.
주식회사 SQL의 대주주 엘리스 양은 이번 주주총회에 꼭 통과시켜야 하는 안건이 있는데, 반대하는 주주들의 세력도 만만치 않습니다.
엘리스 양은 참여하는 주주들의 데이터베이스를 통해 이번 주주총회에서의 승산을 파악해보려고 합니다.
주주들의 정보를 가지고 있는 데이터베이스 shareholder가 있습니다.

name : 주주의 이름
stock : 보유 주식 수
agree : 엘리스의 의견을 찬성하면 0, 반대하면 1

지시사항
모든 주주의 정보를 출력하세요.
10만 주 이상 가지고 있는 주주들의 정보를 출력하세요.
Alexis, Craig, Fred가 가진 주식 수를 출력하세요.
엘리스에게 찬성하면서 10만 주 이상 보유 중인 주주들의 이름과 주식 수를 출력하세요.
엘리스에게 반대하면서 10만 주 이상 보유 중인 주주들의 이름과 주식 수를 출력하세요.
20만 주 이상 또는 10만 주 이하만큼 보유하고 있는 주주들의 정보를 출력하세요.

-- 아래에 미션을 수행하는 코드를 작성해 봅시다.
-- 모든 주주의 정보를 출력하는 쿼리:
SELECT * FROM shareholder;

-- 10만 주 이상 가지고 있는 주주들의 정보를 출력하는 쿼리:
SELECT * FROM shareholder WHERE stock >= 100000;

-- Alexis, Craig, Fred가 가진 주식 수를 출력하는 쿼리:
SELECT stock FROM shareholder WHERE name IN ('Alexis', 'Craig', 'Fred');

-- 엘리스에게 찬성하면서 10만 주 이상 보유 중인 주주들의 이름과 주식 수를 출력하는 쿼리:
SELECT name, stock FROM shareholder WHERE agree = 0 AND stock >= 100000;

-- 엘리스에게 반대하면서 10만 주 이상 보유 중인 주주들의 이름과 주식 수를 출력하는 쿼리:
SELECT name, stock FROM shareholder WHERE agree = 1 AND stock >= 100000;

-- 20만 주 이상 또는 10만 주 이하만큼 보유하고 있는 주주들의 정보를 출력하는 쿼리:
SELECT * FROM shareholder WHERE stock >= 200000 OR stock <= 100000;

