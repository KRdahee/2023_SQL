테이블의 구조 - DESC
본격적으로 SQL의 세계로 들어가기에 앞서 테이블의 구조를 확인하는 명령어에 대해 알아봅시다.

employees는 직원번호(emp_no), 생일(birth_date), 성(first_name), 이름(last_name), 성별(gender), 고용일(hire_date), 관리자번호(superior_no)로 이루어져 있습니다.

salaries는 직원번호(emp_no), 연봉(salary), 시작일(from_date), 종료일(to_date)로 이루어져 있습니다.

그럼 직접 데이터베이스의 구조를 출력해봅시다.


지시사항
DESC 문을 이용해 employees의 구조를 출력해보세요.
DESC 문을 이용해 salaries의 구조를 출력해보세요.
Tips
;(세미콜론)은 한 문장의 끝을 의미합니다.
명령어를 입력한 후 마지막에 ;을 입력해야 컴퓨터가 명령어를 구분할 수 있습니다.
두 테이블은 앞으로의 실습에서 계속 사용할 테이블이니 눈여겨 보세요.


[데이터 조회하기 - SELECT 1]
SQL은 데이터베이스를 다루기 위한 언어입니다.
가장 먼저 데이터베이스의 내용을 출력해 봅시다.
앞서 배운 SELECT 문을 이용해 book 테이블을 출력해 볼까요?

지시사항

book의 정보를 검색하기 위해 오른쪽 코드 창에 다음과 같이 입력해 보세요.
SELECT * FROM book;

-- SELECT문을 이용해 book테이블을 조회하는 쿼리를 작성해주세요.
SELECT * from book;

[데이터 조회하기 - SELECT 2]

SQL은 데이터베이스를 다루기 위한 언어입니다.
가장 먼저 데이터베이스의 내용을 출력해 봅시다.
앞서 배운 SELECT 문을 이용해 employees 테이블을 출력해 볼까요?

지시사항

SELECT문을 이용해 employees 테이블을 검색 해봅시다.
오른쪽 코드 창에 다음과 같이 입력해 보세요.
SELECT * FROM employees;

-- SELECT문을 이용해 employees테이블을 조회하는 쿼리를 작성해주세요.

SELECT * FROM employees;

[데이터 조회하기 - SELECT 3]

이번에는 현재 도서관에 있는 책을 파악하기 위하여 데이터 목록을 뽑아내 봅시다.
단, 책의 제목과 저자만 골라서 조회하려고 합니다.
현재 미리 작성되어 있는 쿼리를 실행해 보면 book테이블의 구조가 출력됩니다.

지시사항

book테이블에서 책의 제목과 저자만 골라서 조회하여 봅시다. 단 제목, 저자 순으로 출력하도록 합시다.
book테이블의 각 컬럼은 다음과 같습니다.

Tips
위 표에 있는 자료형에 따라서 저장되는 자료의 특성이 달라집니다.
DESC는 테이블의 구조를 출력하는 쿼리입니다. 실행 버튼을 눌러 보면 해당 테이블의 구조를 확인해 보실 수 있습니다.

-- book 테이블의 구조를 조회하는 쿼리입니다. 수정하실 필요는 없습니다.
DESC book;

-- 책의 제목과 저자만 골라서 조회하는 쿼리를 작성해주세요.
SELECT title, author
from book;

[데이터 고유 값만 출력하기 - DISTINCT]

salaries 테이블에는 직원들의 연도별 연봉이 들어있습니다.
어떤 직원들의 연봉이 적혀있는지 알아보려고 했는데 그냥 출력하면 직원 번호가 중복되서 검색이 됩니다.

지시사항

DISTINCT를 이용해 중복 없이 직원 번호를 검색해보세요.
직원 번호인 emp_no 컬럼만 검색합니다.

-- salaries 테이블에 있는 직원 번호를 중복 없이 출력해 봅니다.
SELECT distinct emp_no
from salaries;

SELECT emp_no
from salaries;

[SELECT에 조건 추가하기 - WHERE 1]

엘리스 도서관에서는 유명 작가인 Joanne Kathleen Rowling의 책들을 가지고 이벤트를 하려고 합니다.
이 이벤트를 위해서는 대상이 되는 책들을 모두 골라내야 합니다.

지시사항

앞서 배운 WHERE를 이용해 Joanne Kathleen Rowling작가의 책만 조회해 봅시다.
출력할 때는 *을 이용해 모든 컬럼을 출력하도록 합시다.
book테이블의 각 컬럼은 다음과 같습니다.

Tips
SQL에서 문자열을 사용할 때에는 작은따옴표'를 사용합니다. 예를 들어 elice라는 문자열을 사용하고 싶다면 'elice'라고 작성하면 됩니다.

-- 테이블의 구조를 출력하는 쿼리입니다. 실행 버튼을 눌러보시면 테이블의 구조를 알 수 있습니다.
DESC book;

-- Joanne Kathleen Rowling작가의 책만 골라서 조회하는 쿼리를 작성해주세요.
select *
from book
where author = 'Joanne Kathleen Rowling';

[SELECT에 조건 추가하기 - WHERE 2]

employees 테이블에서 남자 직원들만 검색하려고 합니다.
앞서 배운 WHERE을 이용해 gender가 'M' 인 직원들만 검색해봅시다.

지시사항
WHERE을 이용해 gender가 'M' 인 직원들을 검색하세요.
검색할 때는 *을 이용해 모든 컬럼을 검색하도록 합시다.

Tips
SQL에서 문자열을 사용할 때에는 작은따옴표'를 사용합니다. 예를 들어 elice라는 문자열을 사용하고 싶다면 'elice'라고 작성하면 됩니다.

-- gender가 'M'인 직원만 골라서 조회하는 쿼리를 작성해주세요.
select *
from employees
where gender = 'M';

[여러 개의 조건 추가하기 - WHERE 1]

엘리스네 반 선생님이 시험의 성적에 성적을 매기려고 합니다.
수학 점수가 80점 초과 국어 점수가 90점 이상인 사람에게 A+을 주기 위해 score테이블에서 검색하려고 합니다.

지시사항

score테이블에서 수학(math) 점수가 80점 초과, 국어(korean) 점수가 90점 이상인 학생의 정보를 검색해보세요.

DESC score;

-- 수학 점수가 80점 초과, 국어 점수가 90점 이상인 학생의 정보를 검색해보세요.

select *
from score
where
math > 80 and korean >= 90;

[여러 개의 조건 추가하기 - WHERE 2]

employees 테이블에서 여자 직원들 중에 first_name이 'Chirstian' 인 직원들을 검색하려고 합니다.
WHERE을 사용하되 AND를 이용해서 조건을 추가해보세요.

지시사항

여자 직원들 중에 first_name이 'Chirstian' 인 직원들을 검색해보세요.
조회할 때는 모든 컬럼을 검색하도록 합니다.

Tips
and와 or은 3개 이상에서도 사용이 가능합니다. 예를 들어 A and B and C라고 작성한다면 A, B, C모두를 만족해야 합니다.

-- 여자 직원 중 이름이 Chirstian인 직원들을 출력합니다.
select *
from employees
where gender = 'F' 
and first_name = 'Chirstian'





